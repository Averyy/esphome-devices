substitutions:
    device_name: radar-water-tester
    friendly_name: Radar Water Tester

external_components:
    - source: github://Averyy/esphome-custom-components@main
      components: [hlk_ld2413]

packages:
    # Select ESP32 Board:
    device_base: !include common/device_esp32dev.yaml
    # device_base: !include common/device_esp32c3_mini.yaml
    # device_base: !include common/device_esp32c6_firebeetle.yaml

    # Optional Features:
    mosfet_control: !include common/mosfet_control.yaml #mosfet_pin on at boot, off at sleep
    # wifi: !include common/wifi.yaml

output:
    - platform: gpio
      pin: GPIO4
      id: mosfet_pin

uart:
    id: uart_radar
    tx_pin: GPIO17
    rx_pin: GPIO16
    baud_rate: 115200

sensor:
    - platform: hlk_ld2413
      uart_id: uart_radar
      name: "Water Level"
      unit_of_measurement: "mm"
      accuracy_decimals: 0
      update_interval: 2.4s # Default 2.4s, approx 15x the report cycle value
      # Optional configurations with defaults matching datasheet
      min_distance: 150mm # Default 150mm, Valid range: 150-10500mm
      max_distance: 2500mm # Default 10000mm, Valid range: 250-10500mm
      report_cycle: 160ms # Default 160ms, Valid range: 50-1000ms
      calibrate_on_boot: true # Default false, performs threshold calibration during setup
      filters:
          # Ignore the first 10
          - skip_initial: 10
          # Filter out zero values
          - filter_out: 0
          # Optionally add a timeout if no valid reading after some time
          - timeout:
                timeout: 90s
                value: 0
      on_value:
          - lambda: |-
                // Received value
                float sensor_value = x;  // Store the filtered value
                ESP_LOGD("main", "Received filtered value of %.2f mm", sensor_value);
